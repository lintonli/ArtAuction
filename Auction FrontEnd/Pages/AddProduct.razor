
@page "/AddProduct"
@inject NavigationManager Navigation;
@inject TokenProvider tokenProvider;
@inject CategoryService categoryService;
@inject ProductService productService;
@inject IJSRuntime _jsRuntime;

<h3>AddProduct</h3>
<div class="container">
    <div class="nav">
        <div class="logo">

            <p>Eddy'sEd</p>
        </div>
        <a href="/LogIn">Sell</a>
        <div class="end">
            <div class="out">
                <img src="/Icons/logout_FILL0_wght400_GRAD0_opsz24.svg" alt="" />

            </div>
            <div @onclick=Logout>Logout</div>
        </div>
    </div>
    <div class="sidjjebar">
      
        <div class="icon">
            <img src="/Icons/gavel_FILL0_wght400_GRAD0_opsz24.svg" alt="" />
            <a href="/MyProducts">My Products</a>
        </div>
        <div class="icon">
            <img src="/Icons/orders_FILL0_wght400_GRAD0_opsz24.svg" alt="" />
            <a href="/AddProducts">Add Product</a>
        </div>
        <div class="icon">
            <img src="/Icons/manage_accounts_FILL0_wght400_GRAD0_opsz24.svg" alt="" />
            <a href="/account">Account</a>
        </div>
    </div>
    <div class="body">
       
        <EditForm Model="@newProduct" OnValidSubmit="HandleValidSubmit">
             <div class="form">
            <label for="Name">Name</label>
            <InputText @bind-Value="newProduct.Name" />
            <label for="Image">Image</label>
            <InputText @bind-Value="newProduct.Image" />
            <label for="Description">Description</label>
            <InputText @bind-Value="newProduct.Description" />
            <label for="category">Category:</label>
             <InputSelect id="category" @bind-Value="newProduct.CategoryId">
            <option value=""></option>
                  
                    @foreach (var category in categories)
            {
                <option value="@category.Id">@category.Name</option>
            }
        </InputSelect>
            <label for="Price">Bidding Price</label>
            <InputNumber @bind-Value="newProduct.Price" />
            <label for="Time">EndTIme</label>
            <InputDate id="date"@bind-Value="newProduct.EndTime"></InputDate>
            <button  class="mt-4 btn btn-primary">Add Product</button>
            </div>
        </EditForm>
           
       
    </div>
</div>
@code {
    public List<ProductDto> products { get; set; } = new List<ProductDto>();
    private List<CategoryDto> categories = new List<CategoryDto>();

    protected override async Task OnInitializedAsync()
    {
        categories = await categoryService.GetCategoriesAsync();
        foreach (var category in categories)

        {
            Console.WriteLine(category.Name);                  
        }
    }
    public ProductDto newProduct = new ProductDto();

    private async Task HandleValidSubmit()
    {
        await productService.AddProduct(newProduct);
        await _jsRuntime.InvokeVoidAsync("ShowMessage", "success", $"{newProduct.Name} added successfully");
        //Navigation.NavigateTo("/MyProducts");
    }
    public async Task Logout()
    {

        await tokenProvider.RemoveItemAsync();
        Navigation.NavigateTo("/");

    }
}
