@page "/ViewItem/{Id}"
@inject ProductService _productService
@inject BidService _bidService;
@inject NavigationManager navigation;
@inject IJSRuntime _jsRuntime;


<div>

<h1>hello world</h1>
<div class="ProductDetails d-flex flex-column gap-2">
    <span class=" d-flex">
    <label for="">Art Name:</label>
    @product.Name
</span>
<span class=" d-flex">
    <label for="">End Time:</label>
    @product.EndTime
</span>
<span class=" d-flex">
    <label for="">Highest bid:</label>
    @product.HighestBid
</span>
<span class=" d-flex">
    <label for="">Start:</label>
    @product.StartTime</span>
</div>

<div class="FormContainer mt-4">
    <input type="number" placeholder="Enter Bid Amount" @bind=bid.BidPrice>
    <button class="btn btn-primary mt-2" @onclick="PlaceBid">Place Bid</button>

</div>
</div>
@code {
    [Parameter]
    public string Id{get; set;}
    public Product product {get;set;}
    public BidDto bid {get;set;}

    protected override async Task OnInitializedAsync()
    {
        product=new Product();
        bid = new BidDto();
        await GetProductDetails();
    }


    public async Task GetProductDetails()
    {
        Guid productId=Guid.Parse(Id);
        product=  await _productService.GetProductByIdAsync(productId);
        //  Console.WriteLine(product.Name);
        // await _productService.GetProductsAsync();

    }

    public async Task PlaceBid()
    {
        bid.ProductId=product.Id;
        //bid.BidCount=product.BidCount;
        //bid.HighestBid=product.HighestBid;
        await _bidService.AddBid(bid);
        await _jsRuntime.InvokeVoidAsync("ShowMessage", "Success", "Bid Placed successfully");
        navigation.NavigateTo("/Biddings");
        ///.  Console.WriteLine("Your bid Amount is "+ bid.BidPrice);

        }

}