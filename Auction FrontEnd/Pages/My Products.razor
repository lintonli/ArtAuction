@page "/MyProducts"
@using Microsoft.AspNetCore.Authorization
@inject HttpClient http;
@inject NavigationManager navigtion;
@inject ProductService productService
@inject TokenProvider tokenProvider;
@attribute [Authorize]

<div class="container">
    <div class="nav">
        <div class="logo">

            <p>Eddy'sEd</p>
        </div>
        <a href="/LogIn">Sell</a>
        <div class="end">
            <div class="out">
                <img src="/Icons/logout_FILL0_wght400_GRAD0_opsz24.svg" alt="" />

            </div>
            <div @onclick=Logout>Logout</div>
        </div>
    </div>
   
        <div class="sidjjebar">
      
        <div class="icon">
            <img src="/Icons/gavel_FILL0_wght400_GRAD0_opsz24.svg" alt="" />
            <a href="/MyProducts">My Products</a>
          
        </div>
        <div class="icon">
            <img src="/Icons/orders_FILL0_wght400_GRAD0_opsz24.svg" alt="" />
            <a href="/AddProduct">Add Product</a>
        </div>
        <div class="icon">
            <img src="/Icons/manage_accounts_FILL0_wght400_GRAD0_opsz24.svg" alt="" />
            <a href="/account">Account</a>
        </div>
    </div>
    
    <div class="body">
        <h1>Auction Products</h1>
        <div class="items">
            @foreach (var prods in product)
            {
                <div class="item1">
                    <div class="info3">
                        <img src="@prods.Image" alt="" />
                        <h1>@prods.Name</h1>
                        <div class="stat">
                            <h3>Highest bid: @prods.HighestBid</h3>
                            <p>Status: @prods.BiddingState</p>
                            <p>Bid: @prods.BidCount</p>
                        </div>
                            <div class="cmd">
                            <button class="btn" @onclick="(e => Delete(prods.Id))">Delete</button>
                                <button class="edit" @onclick="(e => Edit(prods.Id, new ProductDto {Name=prods.Name,Image=prods.Image,Description=prods.Description}))">Edit</button>
                            </div>
                       

                    </div>

                </div>

            }
        </div>
    </div>
</div>
@code {
    public List<Product> product { get; set; } = new List<Product>();



    protected override async Task OnInitializedAsync()
    {

        product = await productService.GetProductbyUserId();
    }

    private async void Delete(Guid Id)
    {
        await productService.deleteProduct(Id);
    }
    private async void Edit(Guid Id, ProductDto newProduct)
    {

        await productService.updateProduct(Id,newProduct);
        navigtion.NavigateTo("/AddProduct");
    }

    public async Task Logout()
    {

        await tokenProvider.RemoveItemAsync();
        navigtion.NavigateTo("/");

    }

}
